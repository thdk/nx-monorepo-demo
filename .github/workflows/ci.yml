name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: write
  packages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  NX_VERBOSE_LOGGING: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Setup git
        id: git
        uses: ./.github/actions/setup-git

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      - name: Setup node, install dependencies and configure nx
        uses: ./.github/actions/nx-setup-node

      - name: Setup Playwright
        uses: ./.github/actions/setup-playwright
        with:
          browsers: chromium

      - name: Lint package configurations
        run: npx nx syncpack

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected

      - name: Build lint test affected projects
        run: npx nx affected --targets lint test build e2e

      - name: Version
        run: |
          if [ "${{ steps.git.outputs.branch-name }}" == "main" ]; then
            npx nx release-custom \
              --dry-run false
          else
            npx nx release-custom \
              --preid pr-${{ steps.git.outputs.commit-sha-short }} \
              --git-tag false \
              --git-push false \
              --git-commit false \
              --npm-dist-tag next \
              --dry-run false
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate GCP
        uses: './.github/actions/authenticate-gcp'

      - name: Containerize affected applications
        run: npx nx affected --targets docker-build --exclude-task-dependencies

      - name: Validate IaC
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: ./.github/actions/nx-terraform
        with:
          dry-run: true
          affected-only: true
          configuration: development
  deploy:
    needs: [build]
    uses: ./.github/workflows/cd.yml
    if: ${{ github.ref == 'refs/heads/main' }}
    with:
      environment: development
      dry-run: false
      affected-only: true
    secrets: inherit
